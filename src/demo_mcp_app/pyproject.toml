[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "jira-dependency-analyzer"
version = "0.1.0"
description = "AI-powered Jira work analysis and dependency suggestion tool"
authors = [
    {name = "Nebulas Cloud", email = "dev@nebulas.com.au"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "requests>=2.31.0",
    "openai>=1.30.0",
    "openai-agents",
    "pydantic>=2.5.0",
    "python-dotenv>=1.0.0",
    "click>=8.0.0",
    "mcp>=1.0.0",
]

[tool.hatch.build.targets.wheel]
packages = ["jira_dependency_analyzer"]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    "black>=23.7.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "isort>=5.12.0",
]

[project.scripts]
jira-analyzer = "jira_dependency_analyzer.cli:cli"

[project.urls]
Homepage = "https://github.com/nebulascloud/dagger-mcp-server"
Repository = "https://github.com/nebulascloud/dagger-mcp-server"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["jira_dependency_analyzer"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short"
